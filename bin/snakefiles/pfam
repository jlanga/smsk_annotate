rule pfam_split_pep:
    input:
        fai = transdecoder + "transdecoder.pep.fai"
    output:
        expand(
            pfam + "chunks/transdecoder_{chunk_id}.tsv",
            chunk_id = [
                '{0:05d}'.format(x) 
                for x in range(0, config["number_of_chunks"]["pfam_hmmscan"])
            ]
        )
    params:
        number_of_chunks = config["number_of_chunks"]["pfam_hmmscan"]
    log:
        pfam + "split_pep.log"
    benchmark:
        pfam + "split_pep.json"
    shell:
        "split "
            "--number l/{params.number_of_chunks} "
            "--numeric-suffixes "
            "--suffix-length 5 "
            "--additional-suffix .tsv "
            "{input.fai} "
            "{pfam}/chunks/transdecoder_ "
        "2> {log}"




rule pfam_hmmscan_chunk:
    """
    hmmscan over one chunk
    """
    input:
        pep = transdecoder + "transdecoder.pep",
        fai = transdecoder + "transdecoder.pep.fai",
        chunk = pfam + "chunks/transdecoder_{chunk_id}.tsv",
        hmm = db + "Pfam-A.hmm"
    output:
        tsv = pfam + "chunks/hmmscan_{chunk_id}.tsv"
    log:
        pfam + "chunks/hmmscan_{chunk_id}.log"
    benchmark:
        pfam + "chunks/hmmscan_{chunk_id}.json"
    shell:
        "cut -f 1 {input.chunk} "
        "| xargs samtools faidx {input.pep} "
        "| hmmscan "
            "--domtblout {output.tsv} "
            "{input.hmm} "
            "- "
        "2> {log} 1>&2"



rule pfam_hmmscan_merge:
    """
    Merge hmmscan results into one file
    """
    input:
        expand(
            pfam + "chunks/hmmscan_{chunk_id}.tsv",
            chunk_id = [
                '{0:05d}'.format(x) 
                for x in range(0, config["number_of_chunks"]["pfam_hmmscan"])
            ]
        )
    output:
        tsv = pfam + "hmmscan.tsv"
    log:
        pfam + "hmmscan_merge.log"
    benchmark:
        pfam + "hmmscan_merge.json"
    shell:
        "grep -v ^# {input} > {output} 2> {log}"