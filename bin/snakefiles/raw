rule raw_copy_transcriptome: ##data/sequences/transcriptome.fa - Link to the assembled transcriptome
    input:
        fasta = config["sequences"]["fasta"]
    output:
        fasta = raw + "transcriptome.fa"
    threads:
        1
    log:
        raw + "copy_transcriptome.log"
    benchmark:
        raw + "copy_transcriptome.json"
    shell:
        "cp "
            "$(readlink --canonicalize {input.fasta}) "
            "{output.fasta} "
        "2> {log} 1>&2"



rule raw_index_transcriptome:
    input:
        fasta = raw + "transcriptome.fa"
    output:
        fai = raw + "transcriptome.fa.fai"
    log:
        raw + "index_transcriptome.log"
    benchmark:
        raw + "index_transcriptome.json"
    shell:
        "samtools faidx {input.fasta} 2> {log}"



rule raw_gene_to_trans_map:
    input:
        fasta = raw + "transcriptome.fa"
    output:
        tsv = raw + "gene_to_trans_map.tsv"
    log:
        raw + "gene_to_trans_map.log"
    benchmark:
        raw + "gene_to_trans_map.json"
    shell:
        "get_Trinity_gene_to_trans_map.pl "
        "< {input.fasta} "
        "> {output.tsv} "
        "2> {log}"



rule raw_link_pe_sample:
    input:
        forward= lambda wildcards: config["rna_pe"][wildcards.sample]["forward"],
        reverse= lambda wildcards: config["rna_pe"][wildcards.sample]["reverse"]
    output:
        forward= raw + "{sample}_1.fq.gz",
        reverse= raw + "{sample}_2.fq.gz"
    log:
        raw + "link_pe_{sample}.log"
    benchmark:
        raw + "link_pe_{sample}.json"
    shell:
        "ln --symbolic "
            "$(readlink --canonicalize {input.forward}) "
            "{output.forward} "
        "2>  {log} ; "
        "ln --symbolic "
            "$(readlink --canonicalize {input.reverse}) "
            "{output.reverse} "
        "2>> {log}"