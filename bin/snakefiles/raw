rule raw_link_transcriptome: ##data/sequences/transcriptome.fa - Link to the assembled transcriptome
    input:
        fasta = config["sequences"]["fasta"]
    output:
        fasta = raw + "transcriptome.fa"
    threads:
        1
    log:
        raw + "link_transcriptome.log"
    benchmark:
        raw + "link_transcriptome.json"
    shell:
        "ln --symbolic "
            "$(readlink --canonicalize {input.fasta}) "
            "{output.fasta} "
        "2> {log} 1>&2"



rule raw_index_transcriptome:
    input:
        fasta = raw + "transcriptome.fa"
    output:
        fai = raw + "transcriptome.fa.fai"
    log:
        raw + "index_transcriptome.log"
    benchmark:
        raw + "index_transcriptome.json"
    shell:
        "samtools faidx {input.fasta} 2> {log}"



# rule raw_link_proteome: ##data/sequences/proteome.fa - Link to the assembled proteome
#     input:
#         fasta = config["sequences"]["faa"]
#     output:
#         fasta = raw + "proteome.fa"
#     threads:
#         1
#     log:
#         raw + "link_proteome.log"
#     benchmark:
#         raw + "link_proteome.json"
#     shell:
#         "ln --symbolic "
#             "$(readlink --canonicalize {input.fasta}) "
#             "{output.fasta} "
#         "2> {log} 1>&2"



# rule raw_remove_stops: ##data/sequences/proteome_nostop.fa - Proteome without stops (*)
#     input:
#         fasta = raw + "proteome.fa"
#     output:
#         fasta = raw + "proteome_nostop.fa"
#     threads:
#         1
#     log:
#         raw + "remove_stop.log"
#     benchmark:
#         raw + "remove_stop.json"
#     shell:
#         "sed 's/\*$//g' "
#         "< {input.fasta} "
#         "> {output.fasta}"
#         "2> {log}"
